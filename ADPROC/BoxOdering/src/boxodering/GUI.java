/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package boxodering;

/**
 *
 * @author U AMD
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    
    private int items = 0; // items in basket, helps with filling table
    private Double totalPrice = 0.0; //price of all orders in basket
    
    
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrpGrade = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        cBoxColour1 = new javax.swing.JCheckBox();
        inputColour1 = new javax.swing.JComboBox();
        cBoxColour2 = new javax.swing.JCheckBox();
        inputColour2 = new javax.swing.JComboBox();
        cBoxReinforcedBottom = new javax.swing.JCheckBox();
        cBoxReinforcedSides = new javax.swing.JCheckBox();
        cBoxSealableTop = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        errorHandler = new javax.swing.JOptionPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        inputHeight = new javax.swing.JTextField();
        inputWidth = new javax.swing.JTextField();
        inputDepth = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        grade1 = new javax.swing.JRadioButton();
        grade2 = new javax.swing.JRadioButton();
        grade3 = new javax.swing.JRadioButton();
        grade4 = new javax.swing.JRadioButton();
        grade5 = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        inputQuantity = new javax.swing.JTextField();
        tbPrice = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnGetPrice = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        outTotalPrice = new javax.swing.JTextField();
        btnClearBasket = new javax.swing.JButton();
        btnOrder = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        basket = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Type II");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FlexBox Ordering System");

        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        txtTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTitle.setText("FlexBox Ordering System");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        cBoxColour1.setText("First Colour");
        cBoxColour1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cBoxColour1MouseClicked(evt);
            }
        });

        inputColour1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Red", "Blue", "Green", "Yellow", "Magenta", "Cyan", "Violet", "Maroon", "Orange", "Pink", "Black", "White" }));
        inputColour1.setEnabled(false);

        cBoxColour2.setText("Second Colour");
        cBoxColour2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cBoxColour2MouseClicked(evt);
            }
        });

        inputColour2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Red", "Blue", "Green", "Yellow", "Magenta", "Cyan", "Violet", "Maroon", "Orange", "Pink", "Black", "White" }));
        inputColour2.setEnabled(false);

        cBoxReinforcedBottom.setText("Reinforced Bottom");
        cBoxReinforcedBottom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cBoxReinforcedBottomMouseClicked(evt);
            }
        });

        cBoxReinforcedSides.setText("Reinforced Sides");

        cBoxSealableTop.setText("Sealable Top");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Box Attributes");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Colours:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Reinforcments:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Sealed Top:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(errorHandler, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cBoxColour1)
                            .addComponent(cBoxColour2)
                            .addComponent(cBoxReinforcedBottom)
                            .addComponent(jLabel3)
                            .addComponent(cBoxSealableTop)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inputColour1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputColour2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cBoxReinforcedSides, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxColour1)
                    .addComponent(inputColour1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cBoxColour2)
                    .addComponent(inputColour2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxReinforcedBottom)
                    .addComponent(cBoxReinforcedSides))
                .addGap(6, 6, 6)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cBoxSealableTop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(errorHandler, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Attributes", jPanel2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Dimentions");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Height:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Width:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Depth:");

        inputHeight.setText("0");

        inputWidth.setText("0");

        inputDepth.setText("0");

        jLabel9.setText("m");

        jLabel10.setText("m");

        jLabel11.setText("m");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Grade Of Card");

        btnGrpGrade.add(grade1);
        grade1.setSelected(true);
        grade1.setText("Grade 1");

        btnGrpGrade.add(grade2);
        grade2.setText("Grade 2");

        btnGrpGrade.add(grade3);
        grade3.setText("Grade 3");

        btnGrpGrade.add(grade4);
        grade4.setText("Grade 4");

        btnGrpGrade.add(grade5);
        grade5.setText("Grade 5");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Quantity");

        inputQuantity.setText("0");

        tbPrice.setEditable(false);
        tbPrice.setBackground(new java.awt.Color(204, 204, 204));

        jLabel13.setText("Price:");

        btnClear.setText("Clear");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnGetPrice.setText("Check Price");
        btnGetPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGetPriceMouseClicked(evt);
            }
        });
        btnGetPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(164, 164, 164)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(inputWidth, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputDepth, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(inputHeight, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(grade1)
                        .addGap(18, 18, 18)
                        .addComponent(grade2)
                        .addGap(18, 18, 18)
                        .addComponent(grade3))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(grade4)
                        .addGap(18, 18, 18)
                        .addComponent(grade5)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tbPrice)
                    .addComponent(btnGetPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(inputHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inputWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputDepth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grade1)
                    .addComponent(grade2)
                    .addComponent(grade3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grade4)
                    .addComponent(grade5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(inputQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGetPrice)
                    .addComponent(btnClear))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Dimentions & Grade", jPanel3);

        btnAdd.setText("Add To Basket");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel15.setText("Total Price:");

        outTotalPrice.setEditable(false);
        outTotalPrice.setBackground(new java.awt.Color(204, 204, 204));

        btnClearBasket.setText("Clear Basket");
        btnClearBasket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearBasketMouseClicked(evt);
            }
        });
        btnClearBasket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearBasketActionPerformed(evt);
            }
        });

        btnOrder.setText("Order");
        btnOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOrderMouseClicked(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        basket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Grade", "Sealable", "Dimensions", "Quantity", "Price", "Colour 1", "Colour 2", "Reinforced Bottom", "Reinforced Sides"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(basket);
        basket.getColumnModel().getColumn(0).setResizable(false);
        basket.getColumnModel().getColumn(0).setPreferredWidth(50);
        basket.getColumnModel().getColumn(1).setResizable(false);
        basket.getColumnModel().getColumn(1).setPreferredWidth(70);
        basket.getColumnModel().getColumn(2).setResizable(false);
        basket.getColumnModel().getColumn(2).setPreferredWidth(120);
        basket.getColumnModel().getColumn(3).setResizable(false);
        basket.getColumnModel().getColumn(4).setResizable(false);
        basket.getColumnModel().getColumn(5).setResizable(false);
        basket.getColumnModel().getColumn(6).setResizable(false);
        basket.getColumnModel().getColumn(7).setResizable(false);
        basket.getColumnModel().getColumn(7).setPreferredWidth(120);
        basket.getColumnModel().getColumn(8).setResizable(false);
        basket.getColumnModel().getColumn(8).setPreferredWidth(120);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 773, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(25, Short.MAX_VALUE)))
        );

        jScrollPane3.setViewportView(jPanel4);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnClearBasket)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(outTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrder)
                    .addComponent(btnClearBasket)
                    .addComponent(btnAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Basket", jPanel5);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Types Of Box");

        jLabel23.setText("Below are the styles of box Flexbox manufacture.");

        jLabel24.setText("-   No Colours, Grade 1 - 3, No Reinforcements");

        jLabel25.setText("-   1 Colour, Grade 2 - 4, No Reinforcements");

        jLabel26.setText("-   2 Colours, Grade 2 - 5, No Reinforcements");

        jLabel27.setText("-   2 Colours, Grade 2- 5, Reinforced Bottom");

        jLabel28.setText("-   2 Colours, Grade 3- 5, Reinforced Bottom & Sides");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("All dimentions must be between 0.2 and 5 meters.");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Sealable tops are optional for all boxes.");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addGap(29, 29, 29)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Info", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    public String formatPrice(double price){
        double rounder = 0.004; // 0.4 pence (if above round up, else round down)
        double work = price * 100; // gets the two decimal points you want to the int side of things
        if(work == (int)work){ //if work is an integer
            work /= 100; //get work in the form of pounds again
            return("£"+work); // return work
        }
        else{ // if not 2 digits anyway
            String formatted =  String.format("%10.2f", price); //format to two decimal figures
            // format method automatically rounds
            return("£"+ formatted);
        }
        
            
        
    }
    
    public boolean validateQuantity(){
        boolean valid = true; //validity initlizes as true
        int quantity = 0; // init quantity
        
        try{ // tries to convert input to an integer
            quantity = Integer.parseInt(inputQuantity.getText());
        }
        catch (Exception xRef){ // if it fails:
            valid = false; // no longer valid
        }
        
        if(valid){
            // input must be valid to enter this code
            if(quantity > 2000 || quantity < 1){ //range check, quantity can be between 1 and 2000
                valid = false;
            }
        }
        return valid;
    }
    
    
    public boolean validateDimensions(){
        boolean valid = true; //validity initlizes as true
        double height = 0.0;
        double width = 0.0;
        double depth = 0.0; // initlizes values as 0, this will be overwritten by the text input
        
        try{ // tries to convert HEIGHT into double
            height = Double.parseDouble(inputHeight.getText());
        }
        catch (Exception exRef){
            valid = false; //the user has not entered a number
        }
        
        try{
            width = Double.parseDouble(inputWidth.getText());
        }
        catch (Exception exRef){
            valid = false; //the user has not entered a number
        }
        
        try{
            depth = Double.parseDouble(inputDepth.getText());
        }
        catch (Exception exRef){
            valid = false; //the user has not entered a number
        }
        
        
        
        //if the user has entered valid numbers then range validation can begin.
        if(valid){
            //non-valid inputs cannot enter this statement
            if(height > 5.0 || height < 0.2){
                //height is out of range
                valid = false;
            }
            if(width > 5.0 || width < 0.2){
                //width is out of range
                valid = false;
            }
            if(depth > 5.0 || depth < 0.2){
                //depth is out of range
                valid = false;
            }
        }
        
        return valid;
    }
    
    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // Add to Basket
        //setValueAt(value, x, y) (TEMPLATE FOR ADDING)
        //basket.setValueAt("hello", 2, 2); (DEBUG CODE)
        
        if (validateDimensions() == false) {
            errorHandler.showMessageDialog(null, "All Dimensions must be a number between 0.2 and 5 meters, you have given an invalid input.",
                    "Error: Invalid Input In A Dimensions Field", errorHandler.ERROR_MESSAGE);
        }
        else if(items == 8){

            errorHandler.showMessageDialog(null, "The Basket Has Reached Maximum Capacity.",
                    "Error: Basket Is Full", errorHandler.ERROR_MESSAGE);
        }
        
        else if(validateQuantity() == false){
            errorHandler.showMessageDialog(null, "The quantity must be an integer, between 1 and 2000, you have given an invalid input.",
                    "Error: Invalid Input In The Quantity Field", errorHandler.ERROR_MESSAGE);
        }
         
        else {

        Box box = getBox(); //creates box

        int type = box.getID();
        int grade = box.getGrade();
        double height = box.getHeight();
        boolean isSealable = box.getSealable();
        double width = box.getWidth();
        double depth = box.getDepth();
        int quantity = Integer.parseInt(inputQuantity.getText());
        double price = box.getPrice();
        String colour1, colour2 = ""; //initalizes colours

        if (type == 1) {
            colour1 = "N/A";
            colour2 = "N/A"; //box type 1 can't have any colours
        } else if (type == 2) {
            colour1 = box.getCol1(); //first colour can be accessed
            colour2 = "N/A"; //second colour doesn't exist
        } else {
            colour1 = box.getCol1();
            colour2 = box.getCol2();
        }

        boolean rBot = false;
        boolean rSid = false; // initalized as false, as that is common case

        if (type == 4) {
            rBot = true; //type 4 does have reinforced bottom
            //but no reinforced sides
        } else if (type == 5) {
            rBot = true; //type 5has reinforced bottom and reinforced sides
            rSid = true;
        }
        
        

        price = price * box.getMultiplier();
        price = price * quantity;
        
        String formattedPrice = formatPrice(price);
        

        String dimentions = (height + "x" + width + "x" + depth);
        if (validate(type, grade) == true) {
            //fills table
            //'items' designates row numbers
            basket.setValueAt(grade, items, 0);
            basket.setValueAt(String.valueOf(isSealable), items, 1);
            basket.setValueAt(dimentions, items, 2);
            basket.setValueAt(quantity, items, 3);
            basket.setValueAt(formattedPrice, items, 4);
            basket.setValueAt(colour1, items, 5);
            basket.setValueAt(colour2, items, 6);
            basket.setValueAt(String.valueOf(rBot), items, 7);
            basket.setValueAt(String.valueOf(rSid), items, 8);
            totalPrice += price; //add price to total price
            items++; // next row, increment items
        } else {
             errorHandler.showMessageDialog(null, "FlexBox do not make the type of box you have requested; refer to the 'Info' tab for the types of box we do manufacture",
                    "Error: Flexbox do not make this type of box.", errorHandler.ERROR_MESSAGE);
        }

        outTotalPrice.setText(formatPrice(totalPrice));
          }
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnGetPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetPriceActionPerformed

    }//GEN-LAST:event_btnGetPriceActionPerformed

    private void btnGetPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGetPriceMouseClicked
        int grade = 3; // 3 is safe! all box classes accept 3 as valid
        boolean valid = false;
        double price = 0.0;
        if (grade1.isSelected()) {
            grade = 1;
        } else if (grade2.isSelected()) {
            grade = 2;
        } else if (grade3.isSelected()) {
            grade = 3;
        } else if (grade4.isSelected()) {
            grade = 4;
        } else if (grade5.isSelected()) {
            grade = 5;
        }
        
          if (validateDimensions() == false) {
            errorHandler.showMessageDialog(null, "All Dimensions must be a number between 0.2 and 5 meters, you have given an invalid input.",
                    "Error: Invalid Input In A Dimensions Field", errorHandler.ERROR_MESSAGE);
        }
        else if(validateQuantity() == false){
            errorHandler.showMessageDialog(null, "The quantity must be an integer, between 1 and 2000, you have given an invalid input.",
                    "Error: Invalid Input In The Quantity Field", errorHandler.ERROR_MESSAGE);
        }
          
        else {
        
        
        Box box = getBox();
        if (cBoxReinforcedSides.isSelected()) {
            //validity check, type 5 validation
            if (validate(5, grade) == true) {
                valid = true;
            }

        } else if (cBoxReinforcedBottom.isSelected()) {
            //check if valid, type 4
            if (validate(4, grade) == true) {
                valid = true;
            }

        } else if (cBoxColour2.isSelected()) {
            // type 3 validity check
            if (validate(3, grade) == true) {
                valid = true;
            }

        } else if (cBoxColour1.isSelected()) {
            if (validate(2, grade) == true) {
                valid = true;
            }

        } else {
            if (validate(1, grade) == true) {
                valid = true;
            }

        }

      
        
        if (inputQuantity.getText() == ""){
            valid = false;
        }
        
        String printPrice = "";
        if (valid) {
            // if inputs are valid
            price = box.getPrice();
            price = price * box.getMultiplier();
            price = price * Double.parseDouble(inputQuantity.getText());
            printPrice = formatPrice(price);
        } else {
            printPrice = "invalid";
            //pop up validation code if inputs are invalid
            errorHandler.showMessageDialog(null, "FlexBox do not make the type of box you have requested; refer to the 'Info' tab for the types of box we do manufacture",
                    "Error: Flexbox do not make this type of box.", errorHandler.ERROR_MESSAGE);
        }

        tbPrice.setText(printPrice);

        }
    }

        /*
        * the piece of code below was being broken so i quoted it out!
    }//GEN-LAST:event_btnGetPriceMouseClicked

//GEN-FIRST:event_btnClearMouseClicked
 
//GEN-LAST:event_btnClearMouseClicked

/*
 * more silly code
 */

    private void cBoxReinforcedBottomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cBoxReinforcedBottomMouseClicked

    }//GEN-LAST:event_cBoxReinforcedBottomMouseClicked
/*
    private void cBoxColour2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cBoxColour2MouseClicked

              }//GEN-LAST:event_cBoxColour2MouseClicked

              private void cBoxColour1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cBoxColour1MouseClicked

              }//GEN-LAST:event_cBoxColour1MouseClicked
*/
    private void btnClearBasketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearBasketMouseClicked
        //clears information on table, and resets item to 0
        //first of all asks user if they're sure using errorHandler JOptionPane.

        //table clearing code
        for (int currentColumn = 0; currentColumn < 9; currentColumn++) { //9 collumns, 0 to 8
            for (int currentRow = 0; currentRow < items; currentRow++) { // numbers of rows = items
                basket.setValueAt(null, currentRow, currentColumn); //sets empty values in table
            }
        }
        items = 0; //resets to first row
        totalPrice = 0.0; //removes prevoius (now deleted) order costs
        outTotalPrice.setText("£ 0.00"); //resets total price to 0

    }//GEN-LAST:event_btnClearBasketMouseClicked

    private void btnClearBasketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearBasketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearBasketActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOrderMouseClicked
         errorHandler.showMessageDialog(null, "Your order has been placed, the price was:   " + formatPrice(totalPrice) + "     Thank You.",
                    "Your Order Has Been Placed.", errorHandler.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnOrderMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearActionPerformed

    private void cBoxColour1MouseClicked(java.awt.event.MouseEvent evt) {
        if (cBoxColour1.isSelected() == true) {
            inputColour1.setEnabled(true);
        } else if (cBoxColour1.isSelected() == false) {
            inputColour1.setEnabled(false);
        }
    }

    private void cBoxColour2MouseClicked(java.awt.event.MouseEvent evt) {

        if (cBoxColour2.isSelected() == true) {
            inputColour2.setEnabled(true);
        } else if (cBoxColour2.isSelected() == false) {
            inputColour2.setEnabled(false);
        }
    }

    private boolean validate(int validationType, int grade) {
        //allows code to be recycled
        //validation method
        boolean valid = true;
        if (validationType == 5) {
            if (grade < 3) {
                valid = false; //checks for invalid card
            } else if (cBoxReinforcedBottom.isSelected() == false) {
                valid = false; // checks for non reinforced bottom
            } else if (cBoxColour2.isSelected() == false) {
                valid = false; // must have two colours
            } else if (cBoxColour1.isSelected() == false) {
                valid = false; // must have two colours
            }
        } else if (validationType == 4) {
            if (grade < 2) {
                valid = false; //check for invalid card grade
            } else if (cBoxColour2.isSelected() == false) {
                valid = false; // must have two colours
            } else if (cBoxColour1.isSelected() == false) {
                valid = false; // must have two colours
            }
        } else if (validationType == 3) {
            if (grade < 2) {
                valid = false; //checks if card is valid
            } else if (cBoxColour1.isSelected() == false) {
                valid = false; // must have two colours
            }
        } else if (validationType == 2) {
            if (grade > 4 || grade < 2) {
                valid = false; //checks for valid card
            }
        } else {
            if (grade > 4) {
                valid = false; //checks for valid card
            }
        }
        return valid;

    }

    private Box getBox() {



        int grade = 3; // 3 is safe! all box classes accept 3 as valid
        if (grade1.isSelected()) {
            grade = 1;
        } else if (grade2.isSelected()) {
            grade = 2;
        } else if (grade3.isSelected()) {
            grade = 3;
        } else if (grade4.isSelected()) {
            grade = 4;
        } else if (grade5.isSelected()) {
            grade = 5;
        }
        if (cBoxReinforcedSides.isSelected()) {
            BoxV box = new BoxV(grade,
                    Double.parseDouble(inputHeight.getText()),
                    Double.parseDouble(inputWidth.getText()),
                    Double.parseDouble(inputDepth.getText()),
                    cBoxSealableTop.isSelected(),
                    String.valueOf(inputColour1.getSelectedItem()),
                    String.valueOf(inputColour2.getSelectedItem()));
            return box;


        } else if (cBoxReinforcedBottom.isSelected()) {
            BoxIV box = new BoxIV(grade,
                    Double.parseDouble(inputHeight.getText()),
                    Double.parseDouble(inputWidth.getText()),
                    Double.parseDouble(inputDepth.getText()),
                    cBoxSealableTop.isSelected(),
                    String.valueOf(inputColour1.getSelectedItem()),
                    String.valueOf(inputColour2.getSelectedItem()));
            return box;

        } else if (cBoxColour2.isSelected()) {
            BoxIII box = new BoxIII(grade,
                    Double.parseDouble(inputHeight.getText()),
                    Double.parseDouble(inputWidth.getText()),
                    Double.parseDouble(inputDepth.getText()),
                    cBoxSealableTop.isSelected(),
                    String.valueOf(inputColour1.getSelectedItem()),
                    String.valueOf(inputColour2.getSelectedItem()));
            return box;

        } else if (cBoxColour1.isSelected()) {
            BoxII box = new BoxII(grade,
                    Double.parseDouble(inputHeight.getText()),
                    Double.parseDouble(inputWidth.getText()),
                    Double.parseDouble(inputDepth.getText()),
                    cBoxSealableTop.isSelected(),
                    String.valueOf(inputColour1.getSelectedItem()));
            return box;

        } else {
            BoxI box = new BoxI(grade,
                    Double.parseDouble(inputHeight.getText()),
                    Double.parseDouble(inputWidth.getText()),
                    Double.parseDouble(inputDepth.getText()),
                    cBoxSealableTop.isSelected());
            return box;
        }



    }

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {
        //removes text from all boxes, and defaults check boxes
        cBoxColour1.setSelected(false);
        cBoxColour2.setSelected(false);
        cBoxReinforcedBottom.setSelected(false);
        cBoxReinforcedSides.setSelected(false);
        cBoxSealableTop.setSelected(false);
        grade1.setSelected(true); //default
        inputQuantity.setText("");
        inputHeight.setText("");
        inputWidth.setText("");
        inputDepth.setText("");
        inputColour1.setEnabled(false); //disables use, as cBoxColour1 is false
        inputColour2.setEnabled(false); //disables use, as cBoxColour2 is false
        
        tbPrice.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable basket;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearBasket;
    private javax.swing.JButton btnGetPrice;
    private javax.swing.ButtonGroup btnGrpGrade;
    private javax.swing.JButton btnOrder;
    private javax.swing.JCheckBox cBoxColour1;
    private javax.swing.JCheckBox cBoxColour2;
    private javax.swing.JCheckBox cBoxReinforcedBottom;
    private javax.swing.JCheckBox cBoxReinforcedSides;
    private javax.swing.JCheckBox cBoxSealableTop;
    private javax.swing.JOptionPane errorHandler;
    private javax.swing.JRadioButton grade1;
    private javax.swing.JRadioButton grade2;
    private javax.swing.JRadioButton grade3;
    private javax.swing.JRadioButton grade4;
    private javax.swing.JRadioButton grade5;
    private javax.swing.JComboBox inputColour1;
    private javax.swing.JComboBox inputColour2;
    private javax.swing.JTextField inputDepth;
    private javax.swing.JTextField inputHeight;
    private javax.swing.JTextField inputQuantity;
    private javax.swing.JTextField inputWidth;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField outTotalPrice;
    private javax.swing.JTextField tbPrice;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}